#
# FORMAT:
# 
# variablenname = variablenwert
# variablenliste = wert1,wert2, wert3 
#
# alle zeilen, die mit '#' beginnen, werden nicht interpretiert. (kommentarzeile)
# wenn sich ein variablenwert über mehrere zeilen erstreckt,
# dann muss vor dem zeilenumbruch ein '\' stehen
# 

############# ALLGEMEINE ANGABEN ##############
#

title = Stündliche Wertsummierung

description = Hier werden 3 verschiedene Werte aus den Tabellen abgefragt.




############# VERBINDUNGSPARAMETER (zwingend erforderlich) ##############

connection.hostname   = ${testdatabase.hostname}
connection.portnumber = ${testdatabase.portnumber}
connection.user       = ${testdatabase.username}
connection.password   = ${testdatabase.password}




############# DATENQUELLEN PARAMETER (optional) ##############


#
# TABELLEN ----------

# -- bestimmt, wenn definiert, welche tabelle(n) als quelle dienen
data.tables = LEISTUNG   , \
    LEISTUNGB 
#data.tables = \
#    LEISTUNG   , \
#    LEISTUNGB , \
#    TEST2
    
    
# definition von tabelle mit alias LEISTUNG
# hier wird nur der wert kWh_pro15min mitgerechnet, kein preis.
LEISTUNG.database       = fm_control
LEISTUNG.table          = fmcontrol_kw_leistung
LEISTUNG.date-column    = Datum
LEISTUNG.time-column    = Zeit
LEISTUNG.value-1.column = kWh_pro15minx
LEISTUNG.value-1.factor = 1.01
LEISTUNG.value-2.column = 0.15
LEISTUNG.value-2.factor = 13.7603
LEISTUNG.value-3.column = 0.15 * kWh_pro15min


# definition von tabelle mit alias LEISTUNGB
# hier werden beide werte mitgerechnet, leistung und preis.
LEISTUNGB.database       = fm_control
LEISTUNGB.table          = fmcontrol_kw_leistungb
LEISTUNGB.date-column    = Datum
LEISTUNGB.time-column    = Zeit
LEISTUNGB.value-1.column = kWh_pro15min
#   in schilling :-)
LEISTUNGB.value-2.column = kWh_Preis
LEISTUNGB.value-2.factor = 13.7603
LEISTUNGB.value-3.column = (kWh_Preis * kWh_pro15min)


# die namen der werte, die selektiert werden:
data.value-1.label = kWh verbraucht
data.value-2.label = Preis/kWh
data.value-3.label = Schilling

# -- bestimmt, wie die daten gruppiert werden sollen
# -- möglich ist: HOUR, DAY, MONTH, YEAR, TOTAL
data.group.type = HOURA

#
# FILTEREINSTELLUNGEN ----------
#
# -- bestimmt die grenzen des zeitraums, der (inklusive) selektiert wird. DEFAULT: alles
# -- format ist 'yyyy-mm-dd - yyyy-mm-dd', auch TODAY ist möglich
#data.filter.date-bounds = 2012-08-41 - TODAY

# -- bestimmt die tageszeit, in der selektiert wird. DEFAULT: 0-24
# -- format ist 'h24:mm:ss - h24:mm:ss'
data.filter.daytime-bounds = 56:00:00 - 20:00:00


#
# DIAGRAMMEINSTELLUNGEN ----------
#
# -- bestimmt den diagrammtyp. 
# -- gültig sind: LINIENDIAGRAMM, BALKENDIAGRAMM
chart.type = LINIENDIAGRAMM
# soll das ergebnis in tabellenform angezeigt werden?
display.show.as.table = true

display.debug.dumpsql = ${debugsettings.displaySqlQueryInWebPage}